#!/usr/bin/env ruby
# Copyright 2017 Wojciech Adam Koszek <wojciech@koszek.com>

EX_USAGE = 64
NAME = 'lastpass-ansible'
CONFIG_NAME = '.lastpass-ansible.conf'
LASTPASS_ANSIBLE_NAME = 'LASTPASS_ANSIBLE_NAME'
LASTPASS_ANSIBLE_WRONG_PASS_SIM = 'LASTPASS_ANSIBLE_WRONG_PASS_SIM'
CONFIG_FILE_INIT_CONTENT=<<_INIT
# lastpass-ansible configuration file. For more details read:
# https://github.com/wkoszek/lastpass-ansible
_INIT

def main
  if `which lpass`.length == 0
    errfail("You don't have the 'lpass' command tool")
  end

  check_if_init
  lastpass_ansible_name = lastpass_ansible_name_get
  fail_if_terminal_output
  maybe_simulate_wrong_password
  system("lpass show --password #{lastpass_ansible_name}")
end

#--------

def errfail(s)
  STDERR.puts "#{NAME}: #{s}\n"
  exit EX_USAGE
end

def check_if_init
  has_init_passed = ARGV.select{|arg| arg =~ /^--init/ }.length > 0
  if !has_init_passed
    return
  end
  if File.exist?(CONFIG_NAME)
    errfail("File #{CONFIG_NAME} exists!")
  end
  guessed_vault_name = File.basename(Dir.pwd)
  File.write(CONFIG_NAME, CONFIG_FILE_INIT_CONTENT + guessed_vault_name)
  print "Config file #{CONFIG_NAME} created; set password for #{guessed_vault_name} in Ansible\n"
  exit 0
end

def lastpass_ansible_name_get
  lastpass_ansible_name = read_config_file_recurse(Dir.pwd)
  var_name = LASTPASS_ANSIBLE_NAME
  if ENV.key?(var_name)
    lastpass_ansible_name = ENV[var_name]
  end
  if lastpass_ansible_name.nil?
    errfail("Set Lastpass Vault account name via #{var_name}")
  end
  return lastpass_ansible_name
end

def read_config_file_recurse(directory)
  path_chunks = directory.split('/')
  config_file_body = nil
  path_chunks.length.downto(1) do |path_index|
    new_path_chunks = path_chunks
    new_path_chunks[path_index] = CONFIG_NAME
    cfg_file_name = new_path_chunks[0..path_index].join('/')
    if File.exist?(cfg_file_name)
      config_file_body =
        File.readlines(cfg_file_name).select{|l| l =~ /^[^#]/ }[0]
    end
  end
  return config_file_body
end

def fail_if_terminal_output
  stdout = IO.try_convert(STDOUT)
  if stdout.nil? || stdout.isatty
    errfail("Won't print Ansible Vault password to terminal")
  end
end

def maybe_simulate_wrong_password
  var_name = LASTPASS_ANSIBLE_WRONG_PASS_SIM
  if ENV.key?(var_name)
    print 'WrongPassword'
    exit 0
  end
end

#--------

main
